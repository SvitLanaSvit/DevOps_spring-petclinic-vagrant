Розгортання зразкового застосунку Spring PetClinic локально за допомогою Vagrant
Використайте вихідний код із репозиторію.

Створіть репозиторій на GitLab і зафіксуйте (commit) усі зміни до свого GitLab-репозиторію.

Створіть скрипт для розгортання застосунку PetClinic. Використайте Vagrant для автоматизації процесу створення інфраструктури для розгортання із VirtualBox (бажано). Для провізії (налаштування) ви можете використовувати bash, python або ansible у будь-якій комбінації.

##Підзавдання I – Інфраструктура
Опишіть дві віртуальні машини у Vagrantfile для розгортання застосунку (кодове ім’я APP_VM) та бази даних (кодове ім’я DB_VM).

Віртуальні машини мають бути на CentOS або Ubuntu.

Якщо ви не використовуєте приватну мережу, тоді на APP_VM потрібно зробити проброс порту 8080 на хост.

##Підзавдання II – База даних
Використайте будь-який створений вами скрипт провізії для встановлення MySQL та всіх необхідних залежностей на DB_VM.

Налаштуйте базу даних MySQL так, щоб вона приймала підключення лише з підмережі приватної мережі Vagrant.

Створіть у MySQL користувача (не root) та пароль (кодові імена DB_USER та DB_PASS). Використайте змінні середовища хоста для задання цих значень та передайте їх у Vagrantfile за допомогою ENV.

Створіть базу даних у MySQL (кодове ім’я DB_NAME) та надайте користувачу DB_USER усі привілеї для доступу до цієї бази даних.

##Підзавдання III – Застосунок
Створіть користувача (не root) (кодове ім’я APP_USER), від імені якого запускатиметься застосунок на APP_VM.

Використайте будь-який провізіонер для встановлення Java JDK, git та всіх необхідних залежностей на APP_VM.

Клонуйте цей репозиторій у робочу папку (кодове ім’я PROJECT_DIR).

Використайте Maven для запуску тестів та упаковки застосунку. Для додаткової інформації можна скористатися «5-хвилинною документацією Maven». Для зручності у папці проєкту вже є скрипт Maven Wrapper (mvnw), який автоматично завантажує та запускає потрібний Maven.

Якщо тестування та упаковка успішні, отримайте пакет *.jar з папки $PROJECT_DIR/target і помістіть його у домашню папку користувача APP_USER (кодове ім’я APP_DIR).

Встановіть змінні середовища на APP_VM (бажано використовувати ті самі змінні середовища, які передаються з хост-машини через ENV, як і для DB_VM):

DB_HOST – IP-адреса DB_VM

DB_PORT – порт MySQL (за замовчуванням 3306)

DB_NAME – назва бази даних MySQL

DB_USER – користувач MySQL

DB_PASS – пароль користувача MySQL

Запустіть застосунок від імені APP_USER за допомогою команди: java -jar
Якщо все налаштовано правильно, ви побачите застосунок PetClinic за адресою: http://$APP_VM_IP:8080

## ENGLISH
Deploying Spring PetClinic Sample Application localy using Vagrant
Use source code from re﻿po
Create repository on Gitlab and commit all changes to your gitlab repository
Create a deployment script for the PetClinic application. Use Vagrant to automate the process of creating the infrastructure for the deployment with Virtualbox (preferably). As for provisioning you can choose to use bash, python or ansbile in any combination.


Subtask I - Infrastructure
Describe two virtual machines using Vagrantfile for deployment of the application (codename APP_VM) and the database (codename DB_VM)
VMs should be either Centos or Ubuntu
If not using private networking then APP_VM should have port 8080 forwarded to host
Subtask II - Database
Use any provisioning script that you created to install MySQL and any dependency on DB_VM
Customize the mysql database to accept connections only from your vagrant private network subnet
Create a non root user and password (codename DB_USER and DB_PASS) in mysql. Use host environment variable to set these values and pass them to the Vagrantfile using ENV
Create a database in mysql (codename DB_NAME) and grant all privileges for the DB_USER to access the database
Subtask III - Application
Create a non root user (codename APP_USER) that will be used to run the application on APP_VM
Use any provisioner to install Java JDK, git and any dependency on APP_VM
Clone this repository to the working folder (codename PROJECT_DIR)
Use the Maven tool to run tests and package the application. For more info you can use this 5 minutes maven documentation. For convenience the project folder has Maven wrapper script (mvnw) that downloads and executes the required Maven binary automaticaly.
If testing and packaging is successful, then get the *.jar package from $PROJECT_DIR/target folder and place it in the APP_USER home folder (codename APP_DIR).
Set environment variables in APP_VM (preferable use the same environment variables passed from host machine using ENV as in DB_VM):
DB_HOST - IP of the DB_VM
DB_PORT - MySql port (default 3306)
DB_NAME - MySql database name
DB_USER - MySql user
DB_PASS - MySql user's password
Run the application with the APP_USER using the java -jar command
If everything is successful - you will see the PetClinic application on $APP_VM_IP:8080